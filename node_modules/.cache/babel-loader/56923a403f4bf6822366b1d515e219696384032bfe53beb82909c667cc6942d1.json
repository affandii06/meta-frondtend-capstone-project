{"ast":null,"code":"var _jsxFileName = \"/Users/mplussoftware/Public/coursera/meta-frondtend-capstone-project/src/components/Textfield/Textfield.jsx\",\n  _s = $RefreshSig$();\nimport { useState, forwardRef, useRef, useImperativeHandle, useCallback, useEffect, useId } from 'react';\nimport { Label, Error } from '../../components';\nimport './Textfield.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VALID_INPUT_TYPES = ['text', 'number', 'email', 'password', 'tel', 'url', 'date', 'time'];\nexport const Textfield = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    className,\n    id,\n    type = 'text',\n    name,\n    label,\n    placeholder,\n    required = false,\n    value,\n    min,\n    max,\n    minLength,\n    maxLength,\n    pattern,\n    disabled,\n    onFocus,\n    onBlur,\n    onChange,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    ariaErrorMessage,\n    multiline,\n    labelHidden,\n    selectOnFocus,\n    errors\n  } = _ref;\n  const [focus, setFocus] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [isDirty, setIsDirty] = useState(false);\n  const inputRef = useRef(null);\n  const textAreaRef = useRef(null);\n  const Input = multiline ? 'textarea' : 'input';\n  const _id = useId();\n  const input_id = id !== null && id !== void 0 ? id : `${name ? '-' : ''}${_id}`;\n  const label_id = ariaLabelledBy ? ariaLabelledBy : input_id ? `${input_id}-label` : undefined;\n  const error_id = errors ? `${input_id}-error` : null;\n  useImperativeHandle(ref, () => Input === (multiline ? textAreaRef : inputRef).current);\n  useEffect(() => {\n    const target = (multiline ? textAreaRef : inputRef).current;\n    target.value !== '' ? setIsEmpty(false) : setIsEmpty(true);\n    focus ? target === null || target === void 0 ? void 0 : target.focus() : target === null || target === void 0 ? void 0 : target.blur();\n  }, [focus, multiline]);\n\n  /********************************************************************************/\n  /** Event Handlers */\n  /********************************************************************************/\n  const handleFocus = useCallback(e => {\n    setIsDirty(true);\n    setFocus(true);\n    if (selectOnFocus) {\n      const target = multiline ? textAreaRef.current : inputRef.current;\n      target === null || target === void 0 ? void 0 : target.select();\n    }\n    onFocus && onFocus(e);\n  }, [selectOnFocus, onFocus, multiline]);\n  const handleBlur = useCallback(e => {\n    setFocus(false);\n    onBlur && onBlur(e);\n  }, [onBlur]);\n\n  /*************************************************************************/\n  /** Serialize Props */\n  /*************************************************************************/\n\n  const accessibilityProps = {\n    'aria-labelledby': label_id,\n    'aria-describedby': ariaDescribedBy ? ariaDescribedBy : error_id ? error_id : undefined,\n    'aria-invalid': (errors === null || errors === void 0 ? void 0 : errors.length) > 0,\n    'aria-errormessage': ariaErrorMessage ? ariaErrorMessage : error_id ? error_id : undefined,\n    'aria-disabled': disabled,\n    'aria-multiline': multiline\n  };\n  const additionalClasses = isDirty && error_id ? 'error' : '';\n  const elementProps = {\n    className: `LL-Textfield ${additionalClasses}`,\n    id: input_id,\n    type: VALID_INPUT_TYPES.includes(type) ? type : 'text',\n    ref: multiline ? textAreaRef : inputRef,\n    name,\n    required,\n    min,\n    max,\n    minLength,\n    maxLength,\n    placeholder,\n    disabled,\n    value,\n    pattern,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange\n  };\n  const dataProps = {\n    'data-focus': focus,\n    'data-input': !isEmpty || ['date', 'time'].includes(elementProps.type)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `LL-TextfieldContainer ${className !== null && className !== void 0 ? className : ''}`,\n    children: [!labelHidden && label && /*#__PURE__*/_jsxDEV(Label, {\n      className: `LL-TextfieldLabel ${additionalClasses}`,\n      id: label_id,\n      htmlFor: input_id,\n      required: required,\n      ...dataProps,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      ...elementProps,\n      ...accessibilityProps,\n      ...dataProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), isDirty && error_id && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"LL-TextfieldErrors\",\n      children: /*#__PURE__*/_jsxDEV(Error, {\n        id: error_id,\n        children: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 7\n  }, this);\n}, \"N5uLRwhadx1g3zxuedKT0gF1o+M=\", false, function () {\n  return [useId];\n})), \"N5uLRwhadx1g3zxuedKT0gF1o+M=\", false, function () {\n  return [useId];\n});\n_c2 = Textfield;\nvar _c, _c2;\n$RefreshReg$(_c, \"Textfield$forwardRef\");\n$RefreshReg$(_c2, \"Textfield\");","map":{"version":3,"names":["useState","forwardRef","useRef","useImperativeHandle","useCallback","useEffect","useId","Label","Error","VALID_INPUT_TYPES","Textfield","ref","className","id","type","name","label","placeholder","required","value","min","max","minLength","maxLength","pattern","disabled","onFocus","onBlur","onChange","ariaLabelledBy","ariaDescribedBy","ariaErrorMessage","multiline","labelHidden","selectOnFocus","errors","focus","setFocus","isEmpty","setIsEmpty","isDirty","setIsDirty","inputRef","textAreaRef","Input","_id","input_id","label_id","undefined","error_id","current","target","blur","handleFocus","e","select","handleBlur","accessibilityProps","length","additionalClasses","elementProps","includes","dataProps"],"sources":["/Users/mplussoftware/Public/coursera/meta-frondtend-capstone-project/src/components/Textfield/Textfield.jsx"],"sourcesContent":["import {\n  useState,\n  forwardRef,\n  useRef,\n  useImperativeHandle,\n  useCallback,\n  useEffect,\n  useId,\n} from 'react';\nimport { Label, Error } from '../../components';\nimport './Textfield.css';\n\nconst VALID_INPUT_TYPES = [\n  'text',\n  'number',\n  'email',\n  'password',\n  'tel',\n  'url',\n  'date',\n  'time',\n];\n\nexport const Textfield = forwardRef(\n  (\n    {\n      className,\n      id,\n      type = 'text',\n      name,\n      label,\n      placeholder,\n      required = false,\n      value,\n      min,\n      max,\n      minLength,\n      maxLength,\n      pattern,\n      disabled,\n      onFocus,\n      onBlur,\n      onChange,\n      ariaLabelledBy,\n      ariaDescribedBy,\n      ariaErrorMessage,\n      multiline,\n      labelHidden,\n      selectOnFocus,\n      errors,\n    },\n    ref\n  ) => {\n    const [focus, setFocus] = useState(false);\n    const [isEmpty, setIsEmpty] = useState(true);\n    const [isDirty, setIsDirty] = useState(false);\n\n    const inputRef = useRef(null);\n    const textAreaRef = useRef(null);\n\n    const Input = multiline ? 'textarea' : 'input';\n    const _id = useId();\n    const input_id = id ?? `${name ? '-' : ''}${_id}`;\n    const label_id = ariaLabelledBy\n      ? ariaLabelledBy\n      : input_id\n      ? `${input_id}-label`\n      : undefined;\n    const error_id = errors ? `${input_id}-error` : null;\n\n    useImperativeHandle(\n      ref,\n      () => Input === (multiline ? textAreaRef : inputRef).current\n    );\n\n    useEffect(() => {\n      const target = (multiline ? textAreaRef : inputRef).current;\n      target.value !== '' ? setIsEmpty(false) : setIsEmpty(true);\n      focus ? target?.focus() : target?.blur();\n    }, [focus, multiline]);\n\n    /********************************************************************************/\n    /** Event Handlers */\n    /********************************************************************************/\n    const handleFocus = useCallback(\n      e => {\n        setIsDirty(true);\n        setFocus(true);\n        if (selectOnFocus) {\n          const target = multiline ? textAreaRef.current : inputRef.current;\n          target?.select();\n        }\n        onFocus && onFocus(e);\n      },\n      [selectOnFocus, onFocus, multiline]\n    );\n\n    const handleBlur = useCallback(\n      e => {\n        setFocus(false);\n        onBlur && onBlur(e);\n      },\n      [onBlur]\n    );\n\n    /*************************************************************************/\n    /** Serialize Props */\n    /*************************************************************************/\n\n    const accessibilityProps = {\n      'aria-labelledby': label_id,\n      'aria-describedby': ariaDescribedBy\n        ? ariaDescribedBy\n        : error_id\n        ? error_id\n        : undefined,\n      'aria-invalid': errors?.length > 0,\n      'aria-errormessage': ariaErrorMessage\n        ? ariaErrorMessage\n        : error_id\n        ? error_id\n        : undefined,\n      'aria-disabled': disabled,\n      'aria-multiline': multiline,\n    };\n\n    const additionalClasses = isDirty && error_id ? 'error' : '';\n\n    const elementProps = {\n      className: `LL-Textfield ${additionalClasses}`,\n      id: input_id,\n      type: VALID_INPUT_TYPES.includes(type) ? type : 'text',\n      ref: multiline ? textAreaRef : inputRef,\n      name,\n      required,\n      min,\n      max,\n      minLength,\n      maxLength,\n      placeholder,\n      disabled,\n      value,\n      pattern,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onChange,\n    };\n\n    const dataProps = {\n      'data-focus': focus,\n      'data-input': !isEmpty || ['date', 'time'].includes(elementProps.type),\n    };\n\n    return (\n      <div className={`LL-TextfieldContainer ${className ?? ''}`}>\n        {!labelHidden && label && (\n          <Label\n            className={`LL-TextfieldLabel ${additionalClasses}`}\n            id={label_id}\n            htmlFor={input_id}\n            required={required}\n            {...dataProps}\n          >\n            {label}\n          </Label>\n        )}\n        <Input {...elementProps} {...accessibilityProps} {...dataProps} />\n\n        {/** Error Handling */}\n        {isDirty && error_id && (\n          <section className=\"LL-TextfieldErrors\">\n            <Error id={error_id}>{errors}</Error>\n          </section>\n        )}\n      </div>\n    );\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}