{"ast":null,"code":"export const validateNumber = function (input) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -Infinity;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  const regex = new RegExp(/^[+-]?[0-9]+(\\.[0-9]+)?$/);\n  if (regex.test(input)) {\n    const n = input % 1 ? parseFloat(input) : parseInt(input);\n    return n >= min && n <= max;\n  }\n  return false;\n};","map":{"version":3,"names":["validateNumber","input","min","Infinity","max","regex","RegExp","test","n","parseFloat","parseInt"],"sources":["/Users/mplussoftware/Public/coursera/meta-frondtend-capstone-project/src/utilities/validation-helpers.js"],"sourcesContent":["export const validateNumber = (input, min = -Infinity, max = Infinity) => {\n  const regex = new RegExp(/^[+-]?[0-9]+(\\.[0-9]+)?$/);\n\n  if (regex.test(input)) {\n    const n = input % 1 ? parseFloat(input) : parseInt(input);\n    return n >= min && n <= max;\n  }\n  return false;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,UAACC,KAAK,EAAsC;EAAA,IAApCC,GAAG,uEAAG,CAACC,QAAQ;EAAA,IAAEC,GAAG,uEAAGD,QAAQ;EACnE,MAAME,KAAK,GAAG,IAAIC,MAAM,CAAC,0BAA0B,CAAC;EAEpD,IAAID,KAAK,CAACE,IAAI,CAACN,KAAK,CAAC,EAAE;IACrB,MAAMO,CAAC,GAAGP,KAAK,GAAG,CAAC,GAAGQ,UAAU,CAACR,KAAK,CAAC,GAAGS,QAAQ,CAACT,KAAK,CAAC;IACzD,OAAOO,CAAC,IAAIN,GAAG,IAAIM,CAAC,IAAIJ,GAAG;EAC7B;EACA,OAAO,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}